{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","NoQuotesFound","className","classes","noquotes","to","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isAsc","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuote","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","enteredtext","Comments","loadedComments","isAddingComment","setIsAddingComment","useParams","addedCommentHandler","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","exact","url","MainNavigation","classess","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d0591f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isAsc = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isAsc);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isAsc ? 'desc' : 'asc'}`\n    })\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isAsc ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-guide-9f34b.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from \"react\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuote = () => {\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\n\n    useEffect(() => {\n        sendRequest();\n    }, [sendRequest])\n\n    if (status === 'pending') {\n        return <div className=\"centered\">\n            <LoadingSpinner />\n        </div>\n    }\n\n    if (error) {\n        return <p className=\"centered focused\">{error}</p>\n    }\n\n    if (status === 'completed' && (!loadedQuotes || !loadedQuotes.length)) {\n        return <NoQuotesFound />\n    }\n\n    return (\n        <QuoteList quotes={loadedQuotes} />\n    );\n}\n\nexport default AllQuote;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  }\n\n  const finishedEnterHandler = () => {\n    setIsEntering(false);\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave?'} />\n      <Card>\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishedEnterHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst NewQuote = () => {\n    const { sendRequest, status } = useHttp(addQuote);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (status === 'completed') {\n            history.push('/quotes');\n        }\n    }, [status, history])\n    const addQuoteHandler = (quoteData) => {\n        sendRequest(quoteData);\n    }\n\n    return (\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\n    );\n}\n\nexport default NewQuote;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = useHttp(addComment);\n  const commentTextRef = useRef();\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredtext = commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredtext }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' &&\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      }\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './Comments.module.css';\nimport CommentsList from './CommentsList';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = <div className=\"centered\"><LoadingSpinner /></div>\n  }\n\n  if (status === 'completed' && (!loadedComments.length || !loadedComments.length)) {\n    comments = <p className=\"centered\">No comments available!</p>\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length)) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\nimport { Route, useParams, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = () => {\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getSingleQuote, true)\n    const match = useRouteMatch();\n    const params = useParams();\n    const { quoteId } = params;\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    if (status === 'pending') {\n        return <div className=\"centered\">\n            <LoadingSpinner />\n        </div>\n    }\n\n    if (error) {\n        return <p className=\"centered\">{error}</p>\n    }\n\n    if (!loadedQuotes.text) {\n        return <p>No Quote Found!</p>\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={loadedQuotes.text} author={loadedQuotes.author} />\n            <Route path={`${match.path}`} exact>\n                <div className=\"centered\">\n                    <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n                        Load Comments\n                    </Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n    );\n}\n\nexport default QuoteDetail;","import { NavLink } from \"react-router-dom\";\n\nimport classess from './MainNavigation.module.css'\n\nconst MainNavigation = () => {\n    return (\n        <header className={classess.header}>\n            <div className={classess.logo}>Great Quotes</div>\n            <nav className={classess.nav}>\n                <ul>\n                    <li>\n                        <NavLink to=\"/quotes\" activeClassName={classess.active}>\n                            All Quotes\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"/new-quote\" activeClassName={classess.active}>\n                            Add a Quotes\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default MainNavigation;","import { Fragment } from 'react';\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n    return (\n        <Fragment>\n            <MainNavigation />\n            <main className={classes.main}>\n                {props.children}\n            </main>\n        </Fragment>\n    );\n}\n\nexport default Layout;","import NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst NotFound = () => {\n    return (\n        <div className=\"centered\">\n            <NoQuotesFound />\n        </div>\n    );\n}\n\nexport default NotFound;","import { Redirect, Route, Switch } from \"react-router\";\nimport AllQuote from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport Layout from './components/layout/Layout'\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuote />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"/new-quote\" exact>\n            <NewQuote />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}